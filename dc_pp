#!/bin/bash

check_dirs() {
    local PATH="$1"
    local NAME="$2"
    [[ -z "$PATH" ]] && { echo "No se ha ingresado una ruta para '$NAME'"; exit 1; }
    [[ -d "$PATH" ]] || { echo "El directorio proporcionado no existe: '$PATH'"; exit 1; }
}

# ----------------------------------

THIS_DIR="$(dirname "$0")"
cd "$THIS_DIR"
PWDIR="$(pwd -P)"

# --- defaults values

OUTPUT_NAME="output.pdf"
INTERACTIVE='Yes'
QUIET_OPTION_1=1 # post-procesado completo siempre
QUIET_OPTION_2=1 # Blanco y negro (1bit)
QUIET_OPTION_3=1 # si existe sobreescribir PDF
POST_ACTIONS_ENABLED='No'
PDFBEADS_LAYOUT=''

# --- process param

while [ $# -ne 0 ]
  do
    arg="$1"
    case "$arg" in
        project=*) 
            PROJECT_PATH="${arg#*=}"
            PROJECT_PATH="${PROJECT_PATH%/}" #remove last slash if any
            ;;
        even=*)
            EVENPATH="${arg#*=}"
            EVENPATH="${EVENPATH%/}"
            ;;
        odd=*)
            ODDPATH="${arg#*=}"
            ODDPATH="${ODDPATH%/}"
            ;;
        all=*)
            ALLPATH="${arg#*=}"
            ALLPATH="${ALLPATH%/}"
            ;;
        done=*)
            DONEPATH="${arg#*=}"
            DONEPATH="${DONEPATH%/}"
            ;;
        output_name=*) # pdf file name without path
            OUTPUT_NAME="${arg#*=}"
            ;;
        title=*)
            PROJECT_TITLE="${arg#*=}"
            ;;
        include=*)
            INCLUDE_LIST="${arg#*=}"
            ;;
        post-actions-enabled)
            POST_ACTIONS_ENABLED='Yes'
            ;;
        pdf-layout=*)
            PDFBEADS_LAYOUT="${arg#*=}"
            ;;
        quiet)
            INTERACTIVE="No"
            #QUIET_OPTIONS="${arg#*=}"
            ;;
    esac
    shift
  done  

# --- check param and paths

check_dirs "$PROJECT_PATH" 'proyecto'
check_dirs "$EVENPATH" 'even'
check_dirs "$ODDPATH" 'odd'
check_dirs "$ALLPATH" 'all'
check_dirs "$DONEPATH" 'done'

PROJECT_NAME=$( basename "$PROJECT_PATH" )
LOGPATH="$DONEPATH/.logs"
[[ -d "$LOGPATH" ]] || { mkdir "$LOGPATH" || { echo "No se pudo crear '$LOGPATH'"; exit 1; } }

# --- check scripts

echo ""
echo -n " Checkeando scripts de procesamiento"

PROFILE_PROCESSOR="/opt/src/fcen-tesis/fcen-postprocessing/scripts/profile-processor"
[[ -f "$PROFILE_PROCESSOR" ]] && echo -n "..OK(1)" || { echo "profile-processor FILE NOT FOUND"; exit 1;} 

SEND_CMD="$PWDIR/ppm/ppm_sendcmd.sh"
[[ -f "$SEND_CMD" ]] && echo -n "..OK(2)" || { echo "ppm_sendcmd.sh FILE NOT FOUND"; exit 1;} 

POST_ACTIONS_SCRIPT="$PWDIR/dc_pp_post_actions"
[[ -f "$POST_ACTIONS_SCRIPT" ]] && echo -n "..OK(3)" || { echo "dc_pp_post_action FILE NOT FOUND"; exit 1;} 

PRE_ACTIONS_SCRIPT="$PWDIR/dc_pp_pre_actions"
[[ -f "$PRE_ACTIONS_SCRIPT" ]] && echo "..OK(4)" || { echo "dc_pp_pre_actions FILE NOT FOUND"; exit 1;} 

# --- configuration

PREV_SC=""
PREV_OCR=""
PREV_PDFB=""

CREATE_SYMLINKS_IN_ALL_DIR="Yes"
PARAM="follow-symbolic-links"

EXT="jpg,JPG,tif,TIF,jpeg,JPEG,TIFF,tiff"

PROFILE_OPTIONS=''

if [ "$INCLUDE_LIST" != "" ]
  then
    echo "Sólo se procesarán los siguientes ítems: '$INCLUDE_LIST'"
    IFS="," read -ra tmpArr <<< "0004,0005,0006,0007"
    nItems=$(${#tmpArr[@]})
fi

# --- check prior execution

if [ -d "$DONEPATH/.processing" ]
  then
    echo ""
    if find "$DONEPATH/.processing" -mindepth 1 -maxdepth 1 -name "*.tif" | grep -q .
      then
        PREV_SC="Yes"
        echo " - Posibles archivos de un post-procesamiento previo detectados: Scantailor."
    fi
    if find "$DONEPATH/.processing" -mindepth 1 -maxdepth 1 -name "*.html" | grep -q .
      then
        PREV_OCR="Yes"
        echo " - Posibles archivos de un post-procesamiento previo detectados: OCR."
    fi
    if find "$DONEPATH/.processing" -mindepth 1 -maxdepth 1 -name "*.jbig2" | grep -q .
      then
        PREV_PDFB="Yes"
        echo " - Posibles archivos de un post-procesamiento previo detectados: PDFBeads."
        # PARAM="follow-symbolic-links reoptimize-pdf"
    fi
fi

# --- select options

if [ "$INTERACTIVE" == "Yes" ]
  then
    echo ""
    echo " Opciones de post-procesamiento"

    if [ -f "$DONEPATH/$OUTPUT_NAME" ]
      then
       echo ""
       echo " # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # "
       echo " # ATENCION: Este proyecto ya contiene un documento PDF probablemente  #"
       echo " # producido durante un post-procesamiento anterior.                   #"
       echo " # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # "
       echo ""
       echo " (sólo 'enter' para salir sin hacer nada)"
       echo ""
       echo "  1) Repetir el post-procesado completo."
       echo "  2) Repetir el post-procesado pero sin realizar OCR"
       echo "    (reconocimiento de caracteres)."
    else
       echo " ('enter' para salir sin hacer nada)"
       echo ""
       echo "  1) Realizar post-procesado completo"
       echo "  2) Realizar post-procesado sin OCR (reconocimiento de caracteres)"
    fi

    if [ "$PREV_SC" == "Yes" ]
     then
       echo "  3) Re-procesar SOLO el OCR (reconocimiento de caracteres), usando"
       echo "     el resto del material disponible para generar el PDF."
    fi

    if [ "$PREV_SC" == "Yes" ] && [ "$PREV_OCR" == "Yes" ]
     then
       echo "  4) Solo generar el PDF sin realizar nuevamente el post-procesado."
    fi

    if [ -f "$DONEPATH/$OUTPUT_NAME" ]
     then
       echo "  e) Eliminar archivos generados en el post-procesado previo y salir"
    fi

    echo ""   

    echo -n ">> "
    read option
    echo ""
else
    option=$QUIET_OPTION_1
fi

case "$option" in
  "")
     exit 0
     ;;
  1)
     CREATE_SYMLINKS_IN_ALL_DIR="Forced" # solo evita que vuelva a preguntar que hacer mas adelante
     PARAM="$PARAM pdfbeads-force"
     ;;
  2)
     CREATE_SYMLINKS_IN_ALL_DIR="Forced"
     PARAM="$PARAM no-ocr pdfbeads-force"
     ;;
  3)
     if [ "$PREV_SC" == "Yes" ] 
     then 
       PARAM="no-scantailor " # reoptimize-pdf (Re-procesar SOLO el OCR, para que reoptimizar?)
       CREATE_SYMLINKS_IN_ALL_DIR="No"
       if [ "$PREV_PDFB" == "Yes" ]; then PARAM="no-scantailor"; fi
     else
       exit 0
     fi
     ;;
  4)
     if [ "$PREV_OCR" == "Yes" ] 
     then
       PARAM="$PARAM compile-pdf-only reoptimize-pdf"
       CREATE_SYMLINKS_IN_ALL_DIR="No"
       if [ "$PREV_PDFB" == "Yes" ]; then PARAM="$PARAM compile-pdf-only"; fi
     else
       exit 0
     fi
     ;;
  e)
     PARAM="clear"
     CREATE_SYMLINKS_IN_ALL_DIR="Empty-only"
     ;;
  *)
     exit 0
     ;;
esac

if [ "$INTERACTIVE" == "Yes" ]
  then
    echo " Seleccione perfil de procesamiento:"
    echo " ('enter' para salir sin hacer nada)"
    echo ""
    echo "  1) Blanco y negro (1bit)"
    echo "  2) Autodetectar imagenes en color o blanco y negro"
    echo "  3) Color o escala de grises"
    echo ""

    echo -n ">> "
    read pr_option
    echo ""
else
    pr_option=$QUIET_OPTION_2
fi

case "$pr_option" in
    "")
        exit 0
        ;;
    1)
        PROFILE_OPTIONS=''
        ;;
    2)
        PROFILE_OPTIONS=',q1'
        ;;
    3)
        PROFILE_OPTIONS=',q2'
        ;;
    *)
        exit 0
        ;;
esac

# --- create symbolic links in "all" dir

# find "$EVENPATH" -maxdepth 1 -type f -exec mv {} "$ALLPATH" \;
# find "$ODDPATH" -maxdepth 1 -type f -exec mv {} "$ALLPATH" \;

if [ "$CREATE_SYMLINKS_IN_ALL_DIR" != "No" ]
  then
   # delete symliks if any
   if find "$ALLPATH" -maxdepth 1 -print -quit | grep -q .
    then
      if [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Yes" ]
       then
         if [ "$INTERACTIVE" == "Yes" ]
           then
             echo ""
             echo " ATENCION: '$PROJECT_NAME' contiene archivos de un post-procesamiento"
             echo " inconcluso realizado con anterioridad."
             echo ""
             echo " ¿Cómo desea continuar?:"
             echo " ('enter' para salir sin hacer nada.)"
             echo ""
             echo "  1) Para generar el PDF sobreescribiendo lo anterior."
             echo ""
             
             read  -p ">> " option
         else
            option=$QUIET_OPTION_3
         fi
         case "$option" in
            "")
                exit 0
                ;;
            1)
                # continue
                ;;
            *)
                exit 0
                ;;
         esac        
      fi

      if [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Forced" ] || [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Empty-only" ] || [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Yes" ] # es posible que este if sea redundante
       then
         echo -n " Limpiando '$ALLPATH'.."
         find "$ALLPATH" -mindepth 1 -delete && echo "OK" || { echo " ERROR al intentar borrar symlinks de '$ALLPATH'"; exit 1; }
      fi
   else
      echo " Directorio '$ALLPATH' vacío ..OK"
   fi
   #echo "debug: "; ls "$ALLPATH"; echo "-"
   
   if [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Yes" ] || [ "$CREATE_SYMLINKS_IN_ALL_DIR" == "Forced" ]
    then

      # create symlinks form 'odd' and 'even' in 'all'
      if find "$EVENPATH" -maxdepth 1 -name "test.jpg" | grep -q .
       then
        rm "$EVENPATH/test.jpg" && echo " - se eliminó el archivo de prueba 'test.jpg' de '$EVENPATH'" || { echo "Debug: 01"; exit 1; }
      fi
      if find "$ODDPATH" -maxdepth 1 -name "test.jpg" | grep -q .  
       then
        rm "$ODDPATH/test.jpg" && echo " - se eliminó el archivo de prueba 'test.jpg' de '$ODDPATH'" || { echo "Debug: 02"; exit 1; }
      fi

      echo " Creando symlinks en '$ALLPATH'.."
      find "$EVENPATH" -mindepth 1 -maxdepth 1 -type f -exec ln -s {} "$ALLPATH" \; && echo -n "OK .." || { echo " ERROR al intentar crear symlinks desde '$EVENPATH'"; exit 1; }
      find "$ODDPATH" -mindepth 1 -maxdepth 1 -type f -exec ln -s {} "$ALLPATH" \; &&  echo " OK" || { echo " ERROR al intentar crear symlinks desde '$ODDPATH'"; exit 1; }

   fi  
fi

if [ "$INCLUDE_LIST" != "" ]
  then
    INCLUDE="include=$INCLUDE_LIST"
    PARAM=$PARAM" pdfbeads-holds-procfiles"
fi

if [ "$PDFBEADS_LAYOUT" != "" ]
  then
    layouts=(SinglePage OneColumn TwoColumnLeft TwoColumnRight TwoPageLeft TwoPageRight)
    if [[ " ${layouts[@]} " =~ " ${PDFBEADS_LAYOUT} " ]]
      then
        PARAM="$PARAM pdf-layout=$PDFBEADS_LAYOUT"
        echo " PDF layout: '$PDFBEADS_LAYOUT'"
    fi
fi

PARAM="$PARAM scantailor-output-project"
            
# --- profile-processor

echo " Enviar acción a la cola de procesamiento..."
echo ""

if [ "$POST_ACTIONS_ENABLED" == "Yes" ]
 then
   $SEND_CMD "$PROFILE_PROCESSOR 'src=$ALLPATH' 'wrk=$DONEPATH' 'log=$LOGPATH' ext=$EXT $PARAM 'name=$OUTPUT_NAME' $INCLUDE profile=a3$PROFILE_OPTIONS debug pretty-format && $POST_ACTIONS_SCRIPT 'project=$PROJECT_PATH' 'title=$PROJECT_TITLE' 'done=$DONEPATH' 'name=$OUTPUT_NAME' 'output_path=$DONEPATH/$OUTPUT_NAME' #$PROJECT_PATH $nItems"
else
   $SEND_CMD "$PROFILE_PROCESSOR 'src=$ALLPATH' 'wrk=$DONEPATH' 'log=$LOGPATH' ext=$EXT $PARAM 'name=$OUTPUT_NAME' $INCLUDE profile=a3$PROFILE_OPTIONS debug pretty-format #$PROJECT_PATH $nItems"
fi


if [ $? -eq 0 ]
then
  echo " Listo."
else
  echo " Se produjeron errores en '$SEND_CMD'"
  exit 1
fi

exit 0

